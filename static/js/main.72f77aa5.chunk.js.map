{"version":3,"sources":["helpers/history.js","reducers/tracks.js","constants/tracks.js","reducers/filterTracks.js","reducers/login.js","constants/login.js","components/Menu.js","components/About.js","containers/Track.js","constants/user.constants.js","services/user.service.js","actions/user.actions.js","containers/Login.js","actions/register.js","constants/register.js","containers/Register.js","containers/Users.js","actions/tracks.js","containers/App.js","Routes.js","helpers/fake-backend.js","index.js","reducers/index.js"],"names":["history","createBrowserHistory","initialState","tracklist","id","name","tracks","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","payload","filterTracks","users","last_name","email","sex","login","Menu","react_default","a","createElement","className","Link","to","About","components_Menu","connect","ownProps","track","find","Number","match","params","props","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","userService","username","password","requestOptions","method","headers","Content-Type","body","JSON","stringify","fetch","then","handleResponse","user","token","localStorage","setItem","logout","removeItem","response","text","data","parse","ok","status","window","location","reload","error","message","statusText","Promise","reject","dispatch","success","hash","failure","required","value","renderField","_ref","input","label","_ref$meta","meta","touched","warning","assign","placeholder","Login","this","_this$props","handleSubmit","pristine","submitting","onSubmit","Field","component","validate","disabled","React","Component","connectedComponent","bindActionCreators","reduxForm","form","register","Date","now","reset","alert","onClick","usersElements","map","key","mockApiData","getTracks","setTimeout","addTrack","toString","findTrack","App","trackInput","searchInput","ref","index","filter","includes","PrivateRoute","rest","objectWithoutProperties","Route","render","getItem","Redirect","pathname","from","routes","Routes_PrivateRoute","exact","path","Register","Users","Track","firstName","lastName","realFetch","url","opts","resolve","endsWith","filteredUsers","responseJson","configureFakeBackend","store","createStore","combineReducers","router","connectRouter","reduxFormReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","lib","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.72f77aa5.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import { FETCH_TRACKS_SUCCESS, ADD_TRACK } from \"../constants/tracks\";\n\nconst initialState = {\n  tracklist: [\n      {\n          id: 1234,\n          name: 'My super track'\n      },\n  ]\n};\n\nexport const tracks = (state = initialState, action) => {\n  switch(action.type) {\n      case ADD_TRACK:\n        return {\n            ...state,\n            tracklist: [\n              ...state.tracklist,\n              action.payload,\n            ]\n        };\n      case FETCH_TRACKS_SUCCESS:\n        return action.payload;\n      default:\n          return state;\n  }\n}\n","export const FETCH_TRACKS_SUCCESS = 'FETCH_TRACKS_SUCCESS'\nexport const ADD_TRACK = 'ADD_TRACK'\nexport const FIND_TRACK = 'FIND_TRACK'","import { FIND_TRACK } from \"../constants/tracks\";\n\nconst initialState = '';\n\nconst filterTracks = (state = initialState, action) => {\n  if (action.type === FIND_TRACK) {\n    return action.payload;\n  }\n  return state;\n}\n\nexport default filterTracks\n","import { LOGIN, REGISTER } from \"../constants/login\";\n\nconst initialState = {\n    users: [\n        {\n            id: 1234,\n            name: 'Аноним'\n        },\n        {\n            id: 1235,\n            name: 'George',\n            last_name: 'Markosov',\n            email: 'george@mail.com',\n            sex:'male',\n        }\n    ]\n};\n\nexport const login = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                users: [\n                    ...state.users\n                ]\n            }\n        case REGISTER:\n            return {\n                ...state,\n                users: [\n                    ...state.users,\n                    action.payload,\n                ]\n            }\n        default: return state;\n    }\n}\n","export const LOGIN = 'LOGIN'\nexport const REGISTER = 'REGISTER'","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => {\n    return (\n        <nav className='nav-tabs nav-stacked'>\n            <ul>\n                <li><Link to=\"/\">Tracks</Link></li>\n                <li><Link to=\"/about\">About</Link></li>\n                <li><Link to=\"/users\">Users</Link></li>\n                <li><Link to=\"/register\">Register</Link></li>\n                <li><Link to=\"/login\">Logout</Link></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Menu;\n","import React from 'react';\n\nimport Menu from './Menu';\n\nconst About = () => {\n    return (\n      <div className='container-fluid'>\n          <div className='row'>\n              <div className='col-md-3'>\n                  <Menu />\n              </div>\n              <div className='col-md-9'>\n                  <h2>Страница about</h2>\n              </div>\n          </div>\n      </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Track = props => {\n    const { track } = props\n    return <div>{track.name}</div>\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    track: state.tracks.tracklist.find(track => track.id === Number(ownProps.match.params.id))\n  };\n};\n\nexport default connect(mapStateToProps)(Track);\n","export const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT: 'USERS_LOGOUT',\n};\n","export const userService = {\n    login,\n    logout,\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            if (user.token) {\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n            return user;\n        });\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout();\n                window.location.reload(true);\n            }\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}","import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\n\n// export const userActions = {\n//     login,\n//     logout,\n// };\n\nexport const login = (username, password) => {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => {\n                    dispatch(success(user));\n                    window.location.hash = '/';\n                },\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nexport const logout = () => {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { login,logout } from '../actions/user.actions';\nimport { Field, reduxForm } from 'redux-form'\nimport { bindActionCreators } from 'redux';\n\nconst required = value => value ? undefined : 'Обязательно'\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type={type}/>\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n    </div>\n)\n\nclass Login extends React.Component {\n\n    componentDidMount()\n    {\n        this.props.logout() // Logout каждый раз при загрузке страницы /login\n    }\n    render() {\n        const { handleSubmit ,pristine, submitting, login } = this.props\n\n        const onSubmit =\n            handleSubmit(value => {\n                login(value.login, value.password)\n            })\n\n        return (\n            <div className='container-fluid'>\n                <div className='row'>\n                    <div className='col-md-12'>\n                        <h2>Вход</h2>\n                        <div className=\"alert alert-info\">\n                            Логин: test<br />\n                            Пароль: test\n                        </div>\n                        <form onSubmit={onSubmit}>\n                            <div>\n                                <label>Логин</label>\n                                <div>\n                                    <Field\n                                        name=\"login\"\n                                        component={renderField}\n                                        type=\"text\"\n                                        placeholder=\"Логин\"\n                                        validate={[required]}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <label>Пароль</label>\n                                <div>\n                                    <Field\n                                        name=\"password\"\n                                        component={renderField}\n                                        type=\"password\"\n                                        placeholder=\"Пароль\"\n                                        validate={[required]}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <button className='btn btn-primary' type=\"submit\" disabled={pristine || submitting}>Войти</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users,\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        login,\n        logout,\n    },\n    dispatch\n)\n\nconst connectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n\nexport default reduxForm({\n    form: 'login',\n})(connectedComponent);","import { REGISTER } from \"../constants/register\";\n\nexport const register = (value) => dispatch => {\n    const payload = {\n        id: Date.now(),\n        ...value\n    }\n    dispatch({ type: REGISTER, payload: payload })\n}\n","export const REGISTER = 'REGISTER'","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport Menu from '../components/Menu'\nimport { connect } from 'react-redux'\nimport {register} from '../actions/register'\nimport {bindActionCreators} from \"redux\";\n//import Snackbar from '@material-ui/core/Snackbar'\n\nconst required = value => value ? undefined : 'Required'\n\nconst SimpleForm = props => {\n    const { handleSubmit, pristine, reset, submitting, register } = props;\n    const onSubmit =\n            handleSubmit(value => {\n                register(value)\n                window.alert(`Добро пожаловать, ${value.name}`)\n            })\n    return (\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-md-3'>\n                    <Menu/>\n                </div>\n                <div className='col-md-9'>\n                    <h2>Регистрация</h2>\n                    <form onSubmit={onSubmit}>\n                        <div>\n                            <label>Имя</label>\n                            <div>\n                                <Field\n                                    name=\"name\"\n                                    component=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Имя\"\n                                    validate={[required]}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Фамилия</label>\n                            <div>\n                                <Field\n                                    name=\"lastName\"\n                                    component=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Фамилия\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Email</label>\n                            <div>\n                                <Field\n                                    name=\"email\"\n                                    component=\"input\"\n                                    type=\"email\"\n                                    placeholder=\"Email\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Пол</label>\n                            <div>\n                                <label>\n                                    <Field\n                                        name=\"sex\"\n                                        component=\"input\"\n                                        type=\"radio\"\n                                        value=\"male\"\n                                    />\n                                    {' '}\n                                    Муж\n                                </label>\n                                <label>\n                                    <Field\n                                        name=\"sex\"\n                                        component=\"input\"\n                                        type=\"radio\"\n                                        value=\"female\"\n                                    />\n                                    {' '}\n                                    Жен\n                                </label>\n                            </div>\n                        </div>\n                        <div>\n                            <button className='btn btn-primary' type=\"submit\" disabled={pristine || submitting}>Submit</button>\n                            <button className='btn btn-danger' type=\"button\" disabled={pristine || submitting} onClick={reset}>\n                                Clear Values\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                </div>\n\n            </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users,\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        register,\n    },\n    dispatch\n)\n\n\nconst connectedComponent = connect(\n    mapStateToProps, mapDispatchToProps\n)(SimpleForm);\n\nexport default reduxForm({\n    form: 'simple',\n})(connectedComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Menu from \"../components/Menu\";\n\nconst Users = props => {\n    const { users } = props\n    const usersElements = users.map((user) =>\n        <li key={user.id}>\n            {user.name}\n        </li>\n    );\n    return(\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-md-3'>\n                    <Menu/>\n                </div>\n                <div className='col-md-9'>\n                    <h2>Список пользователей</h2>\n                    {usersElements}\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users\n    };\n};\n\nexport default connect(mapStateToProps)(Users);","import { FETCH_TRACKS_SUCCESS } from \"../constants/tracks\";\n\nconst mockApiData = {\n  tracklist:\n  [\n    {\n      id: 1,\n      name: 'Enter Sandman'\n    },\n    {\n      id: 2,\n      name: 'Welcome Home'\n    },\n    {\n      id: 3,\n      name: 'Master of Puppets'\n    },\n    {\n      id: 4,\n      name: 'Fade to Black'\n    }\n  ]\n};\n\nexport const getTracks = () => dispatch => {\n  setTimeout(() => {\n    dispatch({ type: FETCH_TRACKS_SUCCESS, payload: mockApiData })\n  }, 2000)\n}\n\nexport const addTrack = name => dispatch => {\n    const payload = {\n        id: Date.now().toString(),\n        name\n    };\n    dispatch({ type: 'ADD_TRACK', payload });\n}\n\nexport const findTrack = name => dispatch => {\n    dispatch({ type: 'FIND_TRACK', payload: name});\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport { getTracks, addTrack, findTrack } from '../actions/tracks';\nimport Menu from '../components/Menu';\n\nclass App extends React.Component {\n    render() {\n        const { getTracks, tracks, addTrack, findTrack, } = this.props;\n        let trackInput = '';\n        let searchInput = '';\n\n        const onAddTrack = () => {\n            addTrack(trackInput.value);\n            trackInput.value = '';\n        }\n\n        const onFindTrack = () => {\n            findTrack(searchInput.value);\n        }\n\n        return (\n\n            <div className='container-fluid'>\n                <div className='row'>\n                    <div className='col-md-3'>\n                        <Menu/>\n                    </div>\n                    <div className='col-md-9'>\n                        <h2>Трэки</h2>\n                        <div>\n                            <input type=\"text\" ref={(input) => { trackInput = input }} />\n                            <button className='btn btn-secondary' onClick={onAddTrack}>Add</button>\n                        </div>\n                        <div>\n                            <input type=\"text\" ref={(input) => { searchInput = input }} />\n                            <button  className='btn btn-secondary' onClick={onFindTrack}>Find</button>\n                        </div>\n                        <div>\n                            <button className='btn btn-secondary' onClick={getTracks}>Load</button>\n                        </div>\n                        <ul>\n                            {tracks.map((track, index) =>\n                                <li key={index}>\n                                    <Link to={`/tracks/${track.id}`}>{track.name}</Link>\n                                </li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tracks: state.tracks.tracklist.filter(track => track.name.includes(state.filterTracks)),\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    {\n        getTracks,\n        addTrack,\n        findTrack,\n    },\n    dispatch\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport About from './components/About';\nimport Track from './containers/Track';\nimport Login from './containers/Login'\nimport Register from './containers/Register'\nimport Users from './containers/Users'\nimport App from './containers/App';\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)\n\nexport const routes =\n    <div>\n        <PrivateRoute exact path=\"/\" component={App}/>\n        <PrivateRoute path=\"/about\" component={About}/>\n        <Route path=\"/login\" component={Login}/>\n        <PrivateRoute path=\"/register\" component={Register} />\n        <PrivateRoute path=\"/users\" component={Users} />\n        <PrivateRoute path=\"/tracks/:id\" component={Track}/>\n    </div>","export const configureFakeBackend = () => {\n    const users = [{ id: 1, username: 'test', password: 'test', firstName: 'George', lastName: 'Markosov' }];\n    const realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n\n                    const filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        const user = filteredUsers[0];\n                        const responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            token: 'jwt-token'\n                        };\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\n                    } else {\n                        reject('Username or password is incorrect');\n                    }\n\n                    return;\n                }\n                realFetch(url, opts).then(response => resolve(response));\n\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { history } from './helpers/history';\n\nimport './index.css';\nimport './App.css';\nimport reducer from './reducers';\nimport { routes } from \"./Routes\";\n\nimport { configureFakeBackend } from './helpers/fake-backend';\nconfigureFakeBackend();\n\nconst store = createStore(reducer(history), composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <div className='container'>\n      <div className='row'>\n          <Provider store={store}>\n              <ConnectedRouter history={history}>\n                  <HashRouter>\n                      {routes}\n                  </HashRouter>\n              </ConnectedRouter>\n          </Provider>\n      </div>\n  </div>,\n  document.getElementById('root')\n);\n\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nimport { tracks } from './tracks';\nimport filterTracks from './filterTracks';\nimport { login } from './login'\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  form: reduxFormReducer,\n  tracks,\n  filterTracks,\n  login,\n});\n"],"sourceRoot":""}