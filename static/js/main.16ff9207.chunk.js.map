{"version":3,"sources":["../node_modules/config/lib sync","helpers/history.js","constants/tracks.js","reducers/tracks.js","reducers/filterTracks.js","constants/login.js","reducers/login.js","constants/user.constants.js","reducers/users.reducer.js","reducers/index.js","components/Menu.js","components/About.js","containers/Track.js","services/user.service.js","helpers/auth-header.js","actions/user.actions.js","containers/Login.js","actions/login.js","containers/Register.js","actions/register.js","constants/register.js","containers/Users.js","actions/tracks.js","containers/App.js","Routes.js","helpers/fake-backend.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","history","createBrowserHistory","FIND_TRACK","initialState","tracklist","name","tracks","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","payload","filterTracks","users","last_name","email","sex","login","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","loading","items","error","Menu","react_default","a","createElement","className","Link","to","About","components_Menu","connect","ownProps","track","find","Number","match","params","props","userService","username","password","requestOptions","method","headers","Content-Type","body","JSON","stringify","fetch","config","apiUrl","then","handleResponse","user","token","localStorage","setItem","logout","getAll","parse","getItem","Authorization","authHeader","removeItem","response","text","data","ok","status","window","location","reload","message","statusText","Promise","reject","userActions","dispatch","success","hash","failure","required","value","renderField","_ref","input","label","_ref$meta","meta","touched","warning","assign","placeholder","Login","this","_this$props","handleSubmit","pristine","submitting","onSubmit","Field","component","validate","disabled","React","Component","connectedComponent","onLogin","Date","now","reduxForm","form","onRegister","reset","alert","onClick","usersElements","map","key","mockApiData","filter","includes","onAddTrack","toString","onFindTrack","console","log","onGetTracks","setTimeout","trackInput","searchInput","ref","index","PrivateRoute","rest","objectWithoutProperties","Route","render","Redirect","pathname","from","routes","Routes_PrivateRoute","exact","path","App","Register","Users","Track","firstName","lastName","realFetch","url","opts","endsWith","filteredUsers","responseJson","configureFakeBackend","store","createStore","combineReducers","router","connectRouter","reduxFormReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","lib","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.16ff9207.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 12;","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","export const FETCH_TRACKS_SUCCESS = 'FETCH_TRACKS_SUCCESS'\nexport const ADD_TRACK = 'ADD_TRACK'\nexport const FIND_TRACK = 'FIND_TRACK'","import { FETCH_TRACKS_SUCCESS, ADD_TRACK } from \"../constants/tracks\";\n\nconst initialState = {\n  tracklist: [\n      {\n          id: 1234,\n          name: 'My super track'\n      },\n  ]\n};\n\nexport const tracks = (state = initialState, action) => {\n  switch(action.type) {\n      case ADD_TRACK:\n        return {\n            ...state,\n            tracklist: [\n              ...state.tracklist,\n              action.payload,\n            ]\n        };\n      case FETCH_TRACKS_SUCCESS:\n        return action.payload;\n      default:\n          return state;\n  }\n}\n","import { FIND_TRACK } from \"../constants/tracks\";\n\nconst initialState = '';\n\nexport default function filterTracks(state = initialState, action) {\n  if (action.type === FIND_TRACK) {\n    return action.payload;\n  }\n  return state;\n}\n","export const LOGIN = 'LOGIN'\nexport const REGISTER = 'REGISTER'","import { LOGIN, REGISTER } from \"../constants/login\";\n\nconst initialState = {\n    users: [\n        {\n            id: 1234,\n            name: 'Аноним'\n        },\n        {\n            id: 1235,\n            name: 'George',\n            last_name: 'Markosov',\n            email: 'george@mail.com',\n            sex:'male',\n        }\n    ]\n};\n\nexport const login = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                users: [\n                    ...state.users\n                ]\n            }\n        case REGISTER:\n            return {\n                ...state,\n                users: [\n                    ...state.users,\n                    action.payload,\n                ]\n            }\n        default: return state;\n    }\n}\n","export const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n};\n","import { userConstants } from '../constants/user.constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n    case userConstants.GETALL_FAILURE:\n      return { \n        error: action.error\n      };\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nimport { tracks } from './tracks';\nimport filterTracks from './filterTracks';\nimport { login } from './login'\nimport { users } from './users.reducer'\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  form: reduxFormReducer,\n  tracks,\n  filterTracks,\n  login,\n  users,\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => {\n    return (\n        <nav className='nav-tabs nav-stacked'>\n            <ul>\n                <li><Link to=\"/\">Tracks</Link></li>\n                <li><Link to=\"/about\">About</Link></li>\n                <li><Link to=\"/users\">Users</Link></li>\n                <li><Link to=\"/register\">Register</Link></li>\n                <li><Link to=\"/login\">Logout</Link></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Menu;\n","import React from 'react';\n\nimport Menu from './Menu';\n\nconst About = () => {\n    return (\n      <div className='container-fluid'>\n          <div className='row'>\n              <div className='col-md-3'>\n                  <Menu />\n              </div>\n              <div className='col-md-9'>\n                  <h2>Страница about</h2>\n              </div>\n          </div>\n      </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Track = props => {\n    const { track } = props\n    return <div>{track.name}</div>\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    track: state.tracks.tracklist.find(track => track.id === Number(ownProps.match.params.id))\n  };\n};\n\nexport default connect(mapStateToProps)(Track);\n","import config from 'config'\nimport { authHeader } from '../helpers/auth-header';\n\nexport const userService = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","export function authHeader() {\n    // return authorization header with jwt token\n    let user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { 'Authorization': 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\n\nexport const userActions = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => {\n                    dispatch(success(user));\n                    window.location.hash = '/';\n                },\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { login } from \"../actions/login\";\nimport { Field, reduxForm } from 'redux-form'\nimport { userActions } from \"../actions/user.actions\";\n\nconst required = value => value ? undefined : 'Обязательно'\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type={type}/>\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n    </div>\n)\n\nclass Login extends React.Component {\n    componentDidMount()\n    {\n        this.props.dispatch(userActions.logout()) // Logout каждый раз при загрузке страницы /login\n    }\n    render() {\n        const { handleSubmit ,pristine, submitting, users, dispatch } = this.props\n\n        const onSubmit =\n            handleSubmit(value => {\n                dispatch(userActions.login(value.login, value.password))\n            })\n\n        return (\n            <div className='container-fluid'>\n                <div className='row'>\n                    <div className='col-md-12'>\n                        <h2>Вход</h2>\n                        <div className=\"alert alert-info\">\n                            Логин: test<br />\n                            Пароль: test\n                        </div>\n                        <form onSubmit={onSubmit}>\n                            <div>\n                                <label>Логин</label>\n                                <div>\n                                    <Field\n                                        name=\"login\"\n                                        component={renderField}\n                                        type=\"text\"\n                                        placeholder=\"Логин\"\n                                        validate={[required]}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <label>Пароль</label>\n                                <div>\n                                    <Field\n                                        name=\"password\"\n                                        component={renderField}\n                                        type=\"password\"\n                                        placeholder=\"Пароль\"\n                                        validate={[required]}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <button className='btn btn-primary' type=\"submit\" disabled={pristine || submitting}>Войти</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users,\n\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return dispatch => ({\n        onLogin: (name) => {\n            dispatch(login(name));\n        }\n    })\n}\n\nconst connectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n\nexport default reduxForm({\n    form: 'login',\n})(connectedComponent);","import { LOGIN } from \"../constants/login\";\n\nexport const login = (name) => dispatch => {\n        const payload = {\n            id: Date.now(),\n            name\n        };\n        dispatch({ type: LOGIN, payload: payload })\n}\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport Menu from '../components/Menu'\nimport { connect } from 'react-redux'\nimport {register} from '../actions/register'\n//import Snackbar from '@material-ui/core/Snackbar'\n\nconst required = value => value ? undefined : 'Required'\n\nconst SimpleForm = props => {\n    const { handleSubmit, pristine, reset, submitting, onRegister } = props;\n    const onSubmit =\n            handleSubmit(value => {\n                onRegister(value)\n                window.alert(`Добро пожаловать, ${value.name}`)\n            })\n    return (\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-md-3'>\n                    <Menu/>\n                </div>\n                <div className='col-md-9'>\n                    <h2>Регистрация</h2>\n                    <form onSubmit={onSubmit}>\n                        <div>\n                            <label>Имя</label>\n                            <div>\n                                <Field\n                                    name=\"name\"\n                                    component=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Имя\"\n                                    validate={[required]}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Фамилия</label>\n                            <div>\n                                <Field\n                                    name=\"lastName\"\n                                    component=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Фамилия\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Email</label>\n                            <div>\n                                <Field\n                                    name=\"email\"\n                                    component=\"input\"\n                                    type=\"email\"\n                                    placeholder=\"Email\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Пол</label>\n                            <div>\n                                <label>\n                                    <Field\n                                        name=\"sex\"\n                                        component=\"input\"\n                                        type=\"radio\"\n                                        value=\"male\"\n                                    />\n                                    {' '}\n                                    Муж\n                                </label>\n                                <label>\n                                    <Field\n                                        name=\"sex\"\n                                        component=\"input\"\n                                        type=\"radio\"\n                                        value=\"female\"\n                                    />\n                                    {' '}\n                                    Жен\n                                </label>\n                            </div>\n                        </div>\n                        <div>\n                            <button className='btn btn-primary' type=\"submit\" disabled={pristine || submitting}>Submit</button>\n                            <button className='btn btn-danger' type=\"button\" disabled={pristine || submitting} onClick={reset}>\n                                Clear Values\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                </div>\n\n            </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users,\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return dispatch => ({\n        onRegister: (user) => {\n            dispatch(register(user));\n        }\n    })\n}\n\nconst connectedComponent = connect(\n    mapStateToProps, mapDispatchToProps\n)(SimpleForm);\n\nexport default reduxForm({\n    form: 'simple',\n})(connectedComponent);\n","import { REGISTER } from \"../constants/register\";\n\nexport const register = (value) => dispatch => {\n    const payload = {\n        id: Date.now(),\n        ...value\n    }\n    dispatch({ type: REGISTER, payload: payload })\n}\n","export const REGISTER = 'REGISTER'","import React from 'react';\nimport { connect } from 'react-redux';\nimport Menu from \"../components/Menu\";\n\nconst Users = props => {\n    const { users } = props\n    const usersElements = users.map((user) =>\n        <li key={user.id}>\n            {user.name}\n        </li>\n    );\n    return(\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-md-3'>\n                    <Menu/>\n                </div>\n                <div className='col-md-9'>\n                    <h2>Список пользователей</h2>\n                    {usersElements}\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.login.users\n    };\n};\n\nexport default connect(mapStateToProps)(Users);","import { FETCH_TRACKS_SUCCESS } from \"../constants/tracks\";\n\nconst mockApiData = {\n  tracklist:\n  [\n    {\n      id: 1,\n      name: 'Enter Sandman'\n    },\n    {\n      id: 2,\n      name: 'Welcome Home'\n    },\n    {\n      id: 3,\n      name: 'Master of Puppets'\n    },\n    {\n      id: 4,\n      name: 'Fade to Black'\n    }\n  ]\n};\n\nexport const getTracks = () => dispatch => {\n  setTimeout(() => {\n    dispatch({ type: FETCH_TRACKS_SUCCESS, payload: mockApiData })\n  }, 2000)\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getTracks } from '../actions/tracks';\nimport Menu from '../components/Menu';\n\nconst App = props => {\n  const { onAddTrack, onFindTrack, onGetTracks, tracks } = props;\n  let trackInput = '';\n  let searchInput = '';\n\n  const addTrack = () => {\n      onAddTrack(trackInput.value);\n      trackInput.value = '';\n  }\n\n  const findTrack = () => {\n    console.log('findTrack', searchInput.value);\n    onFindTrack(searchInput.value);\n  }\n\n  return (\n\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-md-3'>\n                    <Menu/>\n                </div>\n                <div className='col-md-9'>\n                    <h2>Трэки</h2>\n                    <div>\n                        <input type=\"text\" ref={(input) => { trackInput = input }} />\n                        <button className='btn btn-secondary' onClick={addTrack}>Add</button>\n                    </div>\n                    <div>\n                        <input type=\"text\" ref={(input) => { searchInput = input }} />\n                        <button  className='btn btn-secondary' onClick={findTrack}>Find</button>\n                    </div>\n                    <div>\n                        <button className='btn btn-secondary' onClick={onGetTracks}>Load</button>\n                    </div>\n                    <ul>\n                        {tracks.map((track, index) =>\n                            <li key={index}>\n                                <Link to={`/tracks/${track.id}`}>{track.name}</Link>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tracks: state.tracks.tracklist.filter(track => track.name.includes(state.filterTracks)),\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return dispatch => ({\n        onAddTrack: (name) => {\n            const payload = {\n                id: Date.now().toString(),\n                name\n            };\n            dispatch({ type: 'ADD_TRACK', payload });\n        },\n        onFindTrack: (name) => {\n            console.log('name', name);\n            dispatch({ type: 'FIND_TRACK', payload: name});\n        },\n        onGetTracks: () => {\n            dispatch(getTracks());\n        }\n    })\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport About from './components/About';\nimport Track from './containers/Track';\nimport Login from './containers/Login'\nimport Register from './containers/Register'\nimport Users from './containers/Users'\nimport App from './containers/App';\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)\n\nexport const routes =\n    <div>\n        <PrivateRoute exact path=\"/\" component={App}/>\n        <PrivateRoute path=\"/about\" component={About}/>\n        <Route path=\"/login\" component={Login}/>\n        <PrivateRoute path=\"/register\" component={Register} />\n        <PrivateRoute path=\"/users\" component={Users} />\n        <PrivateRoute path=\"/tracks/:id\" component={Track}/>\n    </div>","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            token: 'fake-jwt-token'\n                        };\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users))});\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n            }, 500);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { history } from './helpers/history';\n\nimport './index.css';\nimport './App.css';\nimport reducer from './reducers';\nimport { routes } from \"./Routes\";\n\nimport { configureFakeBackend } from './helpers/fake-backend';\nconfigureFakeBackend();\n\nconst store = createStore(reducer(history), composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <div className='container'>\n      <div className='row'>\n          <Provider store={store}>\n              <ConnectedRouter history={history}>\n                  <HashRouter>\n                      {routes}\n                  </HashRouter>\n              </ConnectedRouter>\n          </Provider>\n      </div>\n  </div>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}